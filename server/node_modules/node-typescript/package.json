{
  "_args": [
    [
      "node-typescript",
      "/home/krzysztof/Documents/FiFi/FiFiSpeaker/FiFiServer"
    ]
  ],
  "_from": "node-typescript@latest",
  "_id": "node-typescript@0.1.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/node-typescript",
  "_npmUser": {
    "email": "diullei@gmail.com",
    "name": "diullei"
  },
  "_npmVersion": "1.2.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "node-typescript",
    "raw": "node-typescript",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-typescript/-/node-typescript-0.1.3.tgz",
  "_shasum": "c57923f0e32f38d7c63e627d88f7984af2327d5a",
  "_shrinkwrap": null,
  "_spec": "node-typescript",
  "_where": "/home/krzysztof/Documents/FiFi/FiFiSpeaker/FiFiServer",
  "author": {
    "email": "diullei@gmail.com",
    "name": "Diullei Gomes"
  },
  "bugs": {
    "url": "https://github.com/Diullei/node-typescript/issues"
  },
  "dependencies": {
    "typescript": "0.8.3"
  },
  "description": "The TypeScript API exposed to nodejs. Use to compile typescript code in memory",
  "devDependencies": {},
  "directories": {
    "lib": "./"
  },
  "dist": {
    "shasum": "c57923f0e32f38d7c63e627d88f7984af2327d5a",
    "tarball": "https://registry.npmjs.org/node-typescript/-/node-typescript-0.1.3.tgz"
  },
  "engines": {
    "node": "0.8.x"
  },
  "homepage": "https://github.com/Diullei/node-typescript#readme",
  "keywords": [
    "Microsoft",
    "TypeScript",
    "compiler",
    "javascript",
    "language",
    "nodejs"
  ],
  "license": "MIT",
  "main": "./ts-c.js",
  "maintainers": [
    {
      "name": "diullei",
      "email": "diullei@gmail.com"
    }
  ],
  "name": "node-typescript",
  "optionalDependencies": {},
  "readme": "node-typescript\r\n===============\r\n\r\nThe TypeScript API exposed to nodejs. Use to compile typescript code in memory.\r\n\r\n## Usage\r\n\r\ninstall `node-typescript` with npm:\r\n\r\n\tnpm i node-typescript\r\n\r\nCreate a file with this sample code:\r\n\r\n```javascript\r\nvar tsc = require('./node_modules/node-typescript/lib/compiler');\r\nvar compiler = tsc.compiler;\r\n\r\ntsc.initDefault();\r\n\r\nvar code = '\\\r\nclass Greeter {\\\r\n    greeting: string;\\\r\n    constructor(message: string) {\\\r\n        this.greeting = message;\\\r\n    }\\\r\n    greet() {\\\r\n        return \"Hello, \" + this.greeting;\\\r\n    }\\\r\n}\\\r\nvar greeter = new Greeter(\"world\");\\\r\nvar button = document.createElement(\"button\");\\\r\nbutton.innerText = \"Say Hello\";\\\r\nbutton.onclick = function() {\\\r\n    alert(greeter.greet());\\\r\n};\\\r\ndocument.body.appendChild(button);\\\r\n';\r\n\r\ntsc.resolve(__dirname + '/xxx.ts', code, compiler);\r\n\r\ncompiler.typeCheck();\r\n\r\nvar stdout = new tsc.EmitterIOHost();\r\ncompiler.emit(stdout);\r\n```\r\n\r\nGet the javascript output in `stdout.fileCollection`. To this example the javascript output is:\r\n\r\n```javascript\r\n{ '.../xxx.js':\r\n   { lines:\r\n      [ 'var Greeter = (function () {',\r\n        '    function Greeter(message) {',\r\n        '        this.greeting = message;',\r\n        '    }',\r\n        '    Greeter.prototype.greet = function () {',\r\n        '        return \"Hello, \" + this.greeting;',\r\n        '    };',\r\n        '    return Greeter;',\r\n        '})();',\r\n        'var greeter = new Greeter(\"world\");',\r\n        'var button = document.createElement(\"button\");',\r\n        'button.innerText = \"Say Hello\";',\r\n        'button.onclick = function () {',\r\n        '    alert(greeter.greet());',\r\n        '};',\r\n        'document.body.appendChild(button);' ],\r\n     currentLine: '' } }\r\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Diullei/node-typescript.git"
  },
  "version": "0.1.3"
}
